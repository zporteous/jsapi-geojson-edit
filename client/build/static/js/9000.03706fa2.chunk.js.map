{"version":3,"file":"static/js/9000.03706fa2.chunk.js","mappings":";iNAOMA,EAAgBC,EAAAA,EAChBC,EAAsBC,EAAAA,yDCQ5B,IAAMC,EAAO,iBAAU,CAAC,EAAG,EAAG,EAAG,EAAG,GAT/BC,KAAI,SAACC,GAEN,IADA,IAAIC,EAAM,GACDC,EAAI,EAAGA,EAAIF,EAAOE,IACzBD,IAA+B,OAArB,EAAIE,KAAKC,UAAuB,GAAGC,SAAS,IAAIC,UAAU,GAEtE,OAAOL,CACR,IACEM,KAAK,IAEG,yBCXb,SAASC,IAER,CAWD,SAASC,EAAsBC,GAAmC,IAAxBC,EAAwB,wDAChE,GAAID,EAAUE,SAOZ,OANAF,EAAUG,GAAGC,aAAa,WAAY,MACtCJ,EAAUG,GAAGC,aAAa,gBAAiB,QACvCJ,EAAUG,GAAGE,SAASC,SAASC,gBACjCD,SAASC,cAAcC,YAEzBR,EAAUG,GAAGM,MAAQX,GAGvBE,EAAUG,GAAGM,MAAQC,YAAYC,UAAUF,MACb,oBAAnBR,EACTD,EAAUG,GAAGC,aAAa,WAAYH,EAAeW,KAAKZ,GAAa,IAAM,OAEnD,IAAnBC,EACPD,EAAUG,GAAGC,aAAa,WAAY,MAEZ,IAAnBH,GACPD,EAAUG,GAAGU,gBAAgB,YAG/Bb,EAAUG,GAAGU,gBAAgB,gBAC9B","sources":["../node_modules/@esri/calcite-components/dist/components/calcite-action.js","../node_modules/@esri/calcite-components/dist/components/guid.js","../node_modules/@esri/calcite-components/dist/components/interactive.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.82\n */\nimport { A as Action, d as defineCustomElement$1 } from './action.js';\n\nconst CalciteAction = Action;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { CalciteAction, defineCustomElement };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.82\n */\nfunction gen(counts) {\n  return counts\n    .map((count) => {\n    let out = \"\";\n    for (let i = 0; i < count; i++) {\n      out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    }\n    return out;\n  })\n    .join(\"-\");\n}\nconst guid = () => gen([2, 1, 1, 1, 3]);\n\nexport { guid as g };\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.0.0-beta.82\n */\nfunction noopClick() {\n  /** noop **/\n}\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n */\nfunction updateHostInteraction(component, hostIsTabbable = false) {\n  if (component.disabled) {\n    component.el.setAttribute(\"tabindex\", \"-1\");\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n    if (component.el.contains(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    component.el.click = noopClick;\n    return;\n  }\n  component.el.click = HTMLElement.prototype.click;\n  if (typeof hostIsTabbable === \"function\") {\n    component.el.setAttribute(\"tabindex\", hostIsTabbable.call(component) ? \"0\" : \"-1\");\n  }\n  else if (hostIsTabbable === true) {\n    component.el.setAttribute(\"tabindex\", \"0\");\n  }\n  else if (hostIsTabbable === false) {\n    component.el.removeAttribute(\"tabindex\");\n  }\n  else ;\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nexport { updateHostInteraction as u };\n"],"names":["CalciteAction","Action","defineCustomElement","defineCustomElement$1","guid","map","count","out","i","Math","random","toString","substring","join","noopClick","updateHostInteraction","component","hostIsTabbable","disabled","el","setAttribute","contains","document","activeElement","blur","click","HTMLElement","prototype","call","removeAttribute"],"sourceRoot":""}